tw.df$text == ''
tw.df$text == ' '
docterm <- DocumentTermMatrix(myCorpus,control = list(wordLengths = c(4, Inf)))
lda <- LDA(docterm,k = 2)
nchar(tw.df$text) < 20
tw.df$text[6378]
tw.df$text[6099]
tw.df$text[nchar(tw.df$text) < 20]
myStopwords <- c(stopwords('spanish'), "que", "yo",'#6D','htt','así','hoy','días','vota','voto','votar','video','faltan','solo','d')
tw.df <- tw.df %>%
mutate(text = iconv(enc2utf8(text),sub="byte")) %>%
mutate(text = removeURL(text)) %>%
mutate(text = removeNumPunct(text)) %>%
mutate(text = tolower(text)) %>%
mutate(text = removeWords(text,myStopwords)) %>%
mutate(text = stripWhitespace(text))
# ajuste del formato de la fecha:
tw.df <- tw.df %>%
mutate(created = format.Date(created, '%Y-%m-%d'))
myCorpus <- Corpus(VectorSource(tw.df$text))
docterm <- DocumentTermMatrix(myCorpus)
tw.df$text[nchar(tw.df$text) < 20]
?filter
tw.df <- tbl_df(rbind(tw[,c(1,5,11)],tw1[,c(1,5,11)]))
# funciones y variables para preprocesamiento de texto:
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myStopwords <- c(stopwords('spanish'), "que", "yo",'#6D','htt','así','hoy','días','vota','voto','votar','video','faltan','solo','d')
# limpieza de los tweets:
tw.df <- tw.df %>%
mutate(text = iconv(enc2utf8(text),sub="byte")) %>%
mutate(text = removeURL(text)) %>%
mutate(text = removeNumPunct(text)) %>%
mutate(text = tolower(text)) %>%
mutate(text = removeWords(text,myStopwords)) %>%
mutate(text = stripWhitespace(text)) %>%
filter(text != ' ')
tw.df <- tw.df %>%
mutate(created = format.Date(created, '%Y-%m-%d'))
myCorpus <- Corpus(VectorSource(tw.df$text))
docterm <- DocumentTermMatrix(myCorpus)
lda <- LDA(docterm,k = 2)
lda.topics <- as.matrix(topics(lda))
lda.terms <- as.matrix(terms(lda,5))
topic.terms <- c()
topic.terms[1] <- paste(c(lda.terms[,1],'\n'),collapse = '\n')
topic.terms[2] <- paste(c(lda.terms[,2],'\n'),collapse = '\n')
tw.df <- tw.df %>%
mutate(topic = topic.terms[lda.topics])
tw.df.by.days <- tw.df %>%
group_by(created,topic) %>%
dplyr::count(topic,created)
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('cantidad de tweets ')+
xlab('fecha del tweet') +
ggtitle('Topics by day')
?LDA
lda <- LDA(docterm,k = 2,method = 'Gibbs')
lda.topics <- as.matrix(topics(lda))
#top 6 terms in each topic
lda.terms <- as.matrix(terms(lda,10))
lda.terms
topic.terms <- c()
topic.terms[1] <- paste(c(lda.terms[,1],'\n'),collapse = '\n')
topic.terms[2] <- paste(c(lda.terms[,2],'\n'),collapse = '\n')
tw.df <- tw.df %>%
mutate(topic = topic.terms[lda.topics])
tw.df.by.days <- tw.df %>%
group_by(created,topic) %>%
dplyr::count(topic,created)
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('cantidad de tweets ')+
xlab('fecha del tweet') +
ggtitle('Topics by day')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
lda.terms <- as.matrix(terms(lda,5))
topic.terms <- c()
topic.terms[1] <- paste(c(lda.terms[,1],'\n'),collapse = '\n')
topic.terms[2] <- paste(c(lda.terms[,2],'\n'),collapse = '\n')
tw.df <- tw.df %>%
mutate(topic = topic.terms[lda.topics])
tw.df.by.days <- tw.df %>%
group_by(created,topic) %>%
dplyr::count(topic,created)
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
lda <- LDA(docterm,k = 2,method = 'Gibbs')
lda.topics <- as.matrix(topics(lda))
#top 6 terms in each topic
lda.terms <- as.matrix(terms(lda,5))
topic.terms <- c()
topic.terms[1] <- paste(c(lda.terms[,1],'\n'),collapse = '\n')
topic.terms[2] <- paste(c(lda.terms[,2],'\n'),collapse = '\n')
tw.df <- tw.df %>%
mutate(topic = topic.terms[lda.topics])
tw.df.by.days <- tw.df %>%
group_by(created,topic) %>%
dplyr::count(topic,created)
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
lda <- LDA(docterm,k = 3,method = 'Gibbs')
lda.topics <- as.matrix(topics(lda))
#top 6 terms in each topic
lda.terms <- as.matrix(terms(lda,5))
topic.terms <- c()
topic.terms[1] <- paste(c(lda.terms[,1],'\n'),collapse = '\n')
topic.terms[2] <- paste(c(lda.terms[,2],'\n'),collapse = '\n')
topic.terms[3] <- paste(c(lda.terms[,3],'\n'),collapse = '\n')
tw.df <- tw.df %>%
mutate(topic = topic.terms[lda.topics])
tw.df.by.days <- tw.df %>%
group_by(created,topic) %>%
dplyr::count(topic,created)
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
?geom_bar
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_color_brewer() +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_color_discrete() +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'fill') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_color_discrete() +
ggtitle('Proporcion de temas por dia')
rhg_cols1<- c("#7CAE00","#00BFC4","#C77CFF" )
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_fill_manual(values = rhg_cols1) +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_bar(stat = 'identity',position = 'dodge', fill= 'white') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge', fill= 'white') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic, size = 1.2)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic, size = 1.05)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic, size = 0.7)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic, size = 0.5)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic, size = 1)) +
geom_line() +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line(aes(size = 2)) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line(aes(size = 1)) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,colour = topic)) +
geom_line(size = 1) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_fill_brewer(palette="Blues") +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic, alpha = .8)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic, alpha = .9)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge',aes(alpha = .9)) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge',aes(alpha = .9),show.legend = F) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge',show.legend = F) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_alpha() +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_alpha(alpha = .9) +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_colour_hue("clarity") +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
scale_colour_hue(l=70, c=60) +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topic,fill = topic)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topico,colour = topico)) +
geom_line(size = 1) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
tw.df$topic <- NULL
tw.df <- tw.df %>%
mutate(topico = topic.terms[lda.topics])
tw.df.by.days <- tw.df %>%
group_by(created,topico) %>%
dplyr::count(topico,created)
ggplot(tw.df.by.days,aes(x = created,y = n, group = topico,colour = topico)) +
geom_line(size = 1) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topico,fill = topico)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
topicProbabilities <- as.data.frame(lda@gamma)
topicProbabilities
findFreqTerms(docterm,150)
library('wordcloud')
install.packages('wordcloud')
library('wordcloud')
wordcloud(myCorpus,max.words = 100, random.order = FALSE)
warnings()
wordcloud(myCorpus,max.words = 50, random.order = FALSE)
wordcloud(myCorpus,max.words = 50, random.order = FALSE,ordered.colors = T)
wordcloud(myCorpus,max.words = 100, random.order = FALSE,ordered.colors = T)
wordcloud(myCorpus,max.words = 100, random.order = FALSE,ordered.colors = T)
?colorRamp
wordcloud(myCorpus,max.words = 100, random.order = FALSE,ordered.colors = T,colors = heat.colors(10))
wordcloud(myCorpus,max.words = 100, random.order = FALSE,ordered.colors = T,colors = rep(heat.colors(10),10))
wordcloud(myCorpus,max.words = 100, random.order = FALSE,ordered.colors = T,colors = heat.colors(100))
wordcloud(myCorpus,max.words = 50, random.order = FALSE,ordered.colors = T,colors = heat.colors(100))
wordcloud(myCorpus,max.words = 50, random.order = FALSE,ordered.colors = T,colors = heat.colors(50))
heat.colors(50)
wordcloud(myCorpus,max.words = 50, random.order = FALSE)
wordcloud(myCorpus,max.words = 50, random.order = FALSE,random.color = F)
wordcloud(myCorpus,max.words = 50, random.order = FALSE,random.color = F,heat.colors(50))
wordcloud(myCorpus,max.words = 50, random.order = FALSE,heat.colors(50))
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = heat.colors(50))
rainbow(50)
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = terrain.colors(50))
rev(c(1,2))
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = rev(terrain.colors(50)))
scale_color_gradient()
scale_color_gradient(low = 'gray',high = 'red')
scale_color_gradient(low = 'gray',high = 'red')+ scale_color_discrete()
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = rev(heat.colors(50)))
?heat.colors
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = rev(topo.colors(50)))
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = rev(terrain.colors(50)))
tw.df$screenName
unique(tw.df$screenName)
hist(tw.df$screenName)
wordcloud(tw.df$screenName)
wordcloud(tw.df$screenName,max.words = 20)
wordcloud(tw.df$screenName,max.words = 50, random.order = FALSE, colors = rev(terrain.colors(50)))
wordcloud(tw.df$screenName,max.words = 20, random.order = FALSE, colors = rev(terrain.colors(20)))
c(1,2)[1,1]
c(1,2)[c(1,1,1,1),]
c(1,2)[c(1,1,1,1)]
colours(3)
colours()[c(1,2,3)]
colours(1)[c(1,2,3)]
colours(1)
colours(distinct = T)
colours(distinct = T)[c(1,2,3)]
colours(distinct = T)[c(1,2,3)]
ggplot2::scale_colour_brewer()
palette()
palette()[c(3,4,5)]
palette()[c(3,4,5)]
findFreqTerms(tw.df$screenName,100)
count(tw.df$screenName)
n(tw.df$screenName)
findFreqTerms(DocumentTermMatrix(VectorSource(tw.df$screenName)),100)
findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),100)
findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),50)
findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),20)
findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),5)
findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),10)
users <- findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),10)
tw.df.freq.users <- tw.df %>% filter(screenName %in% users)
tw.df.freq.users
tw.df.freq.users <- tw.df.freq.users %>%
group_by(screenName,topico) %>%
dplyr::count(screenName,topico)
tw.df.freq.users
tw.df.freq.users %>% tidyr::spread(topico,n)
tw.df.freq.users.by.topic <- tw.df.freq.users %>% tidyr::spread(topico,n)
tw.df.freq.users.by.topic
View(tw.df.freq.users.by.topic)
users <- findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(unique(tw.df$screenName)))),10)
tw.df.freq.users <- tw.df %>% filter(screenName %in% users)
tw.df.freq.users <- tw.df.freq.users %>%
group_by(screenName,topico) %>%
dplyr::count(screenName,topico)
tw.df.freq.users.by.topic <- tw.df.freq.users %>% tidyr::spread(topico,n)
View(tw.df.freq.users.by.topic)
users <- findFreqTerms(DocumentTermMatrix(Corpus(VectorSource(tw.df$screenName))),10)
tw.df.freq.users <- tw.df %>% filter(screenName %in% users)
tw.df.freq.users <- tw.df.freq.users %>%
group_by(screenName,topico) %>%
dplyr::count(screenName,topico)
tw.df.freq.users
tw.df.freq.users <- tw.df.freq.users %>%
group_by(screenName,topico) %>%
dplyr::count(screenName,topico)
tw.df.freq.users <- tw.df %>% filter(screenName %in% users)
tw.df.freq.users <- tw.df.freq.users %>%
group_by(screenName,topico) %>%
dplyr::count(screenName,topico)
tw.df.freq.users.by.topic <- tw.df.freq.users %>% tidyr::spread(topico,n)
View(tw.df.freq.users.by.topic)
tw.df.freq.users.by.topic[1,1] <- 0
tw.df.freq.users.by.topic[3,1] <- 0
View(tw.df.freq.users.by.topic)
tw.df.freq.users.by.topic <- tw.df.freq.users %>% tidyr::spread(topico,n)
View(tw.df.freq.users.by.topic)
tw.df.freq.users.by.topic[1,2] <- 0
tw.df.freq.users.by.topic[3,2] <- 0
tw.df.freq.users.by.topic <- tw.df.freq.users %>% tidyr::spread(topico,n)
View(tw.df.freq.users.by.topic)
tw.df.freq.users.by.topic[1,2] <- 0
tw.df.freq.users.by.topic[4,2] <- 0
barplot(tw.df.freq.users.by.topic)
barplot(height = tw.df.freq.users.by.topic)
barplot(height = as.matrix(tw.df.freq.users.by.topic))
barplot(height = t(as.matrix(tw.df.freq.users.by.topic)))
install.packages('mass')
install.packages('MASS')
library('MASS')
parcoord(tw.df.freq.users.by.topic)
parcoord(tw.df.freq.users.by.topic[,-1])
install.packages('GGally')
library('GGally')
ggparcoord(tw.df.freq.users.by.topic[,-1])
ggparcoord(tw.df.freq.users.by.topic)
ggparcoord(tw.df.freq.users.by.topic) +
ggparcoord(tw.df.freq.users.by.topic[,-1]) +
scale_color_brewer()
ggparcoord(tw.df.freq.users.by.topic[,-1],aes(colour = screenName))
ggparcoord(tw.df.freq.users.by.topic[,-1],mapping = aes(colour = screenName))
ggparcoord(tw.df.freq.users.by.topic[,-1],groupColumn = screenName)
ggparcoord(tw.df.freq.users.by.topic[,-1],groupColumn = 'screenName')
ggparcoord(tw.df.freq.users.by.topic[,-1],groupColumn = 1)
ggparcoord(tw.df.freq.users.by.topic,groupColumn = 1)
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4),groupColumn = 1)
ggparcoord(tw.df.freq.users.by.topic,columns = c(2:4),groupColumn = 1)
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1)
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets')
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets') +
ggtitle('Proporcion de temas de los usuarios con mas tweets en a muestra')
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets') +
ggtitle('Proporcion de temas de top 5 usuarios')
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets') +
ylim(0,5) +
ggtitle('Proporcion de temas de top 5 usuarios')
View(tw.df.freq.users.by.topic)
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets(escalados)') +
ggtitle('Proporcion de temas de top 5 usuarios')
wordcloud(tw.df$screenName,max.words = 20, random.order = FALSE, colors = rev(terrain.colors(20)))
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets(escalados)') +
ggtitle('Proporcion de temas de top 5 usuarios')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topico,colour = topico)) +
geom_line(size = 1) +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
ggplot(tw.df.by.days,aes(x = created,y = n, group = topico,fill = topico)) +
geom_bar(stat = 'identity',position = 'dodge') +
ylab('Cantidad de tweets ')+
xlab('Fecha del tweet') +
ggtitle('Proporcion de temas por dia')
wordcloud(myCorpus,max.words = 50, random.order = FALSE, colors = rev(terrain.colors(50)))
wordcloud(tw.df$screenName,max.words = 20, random.order = FALSE, colors = rev(terrain.colors(20)))
ggparcoord(tw.df.freq.users.by.topic,columns = c(2,4,3),groupColumn = 1) +
xlab('Temas') +
ylab('# de tweets(escalados)') +
ggtitle('Proporcion de temas de top 5 usuarios')
rm(rhg_cols1)
rm(p)
load.project()
library('ProjectTemplate')
load.project()
load.project()
library('ProjectTemplate')
load.project()
load('cache/.RData')
